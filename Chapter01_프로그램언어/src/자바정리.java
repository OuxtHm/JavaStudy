
/*
 * 자바 설치
 * -------
 * 1. jdk 다운로드 http://java.jdk.net
 * 2. 편집기 https://eclipes.org
 * 3. 자바 환경 설정
 * -> 내PC -> 속성 -> 고급 시스템 설정 -> classpath : 자바에서 제공하는 라이브러리 사용
 * 									 classpath =.;\jdk.0.2\bin
 * 								 -> path : 실행 -> path=c:\jdk-17.0.2\bin
 * 
 * 
 *  일반 프록르램 -> 프로그램 - 운영체제 - 하드웨어
 *  -------------------------------------
 *  자바 프로그램 -> 프로그램 - JVM(jdk-> 실제 실행속도가 느릴 수 있다.) - 운영체제 - 하드웨어
 *  -------------------------------------------
 *  jdk
 *  -------
 *  	JRE   -----------------------
 *  --------   Devlopment Tool
 *      JVM   ---------------------
 *  --------   Devlopment Library
 *  Library
 *  --------
 *  
 *  1. Devlopment Tool
 *  	javac : 컴퓨터가 인식하는 언어로 변경(컴파일)
 *  	java : 프로그램 실행 (인터프리터) -> 한 줄씩 읽어서 출력
 *  	javap : 역컴팡리러 -> 자바로 원상복귀
 *  	javah : header 파일 읽기 -> C/C++ 연동
 *  	javaw : 서버 구동
 *  	jar : 인증 / 배포
 *  			웹 -> war : maven
 *  			자바 -> jar : gradle : zip -> tar
 *  						----------
 *  						라이브러리
 *  
 *  2. JRE : 라이브러리를 포함하고 있다.
 *  --------------------------------
 *  	JVM : 면접
 *  		  ---
 *  		   1. 기술 면접
 *  		   2. 코딩테스트
 *  		   3. 테스트지
 *  
 *  	동작 방식
 *  			 javac                java
 *  	A.java =========== A.class ========== 화면 실행
 *  	프로그래머	  컴파일	   			인터프리터
 *  		배포 -> .class 파일 -> war/jar
 *  		C/C++	|
 *  				모든 운영체제에서 동일한 파일을 생성
 *  				-> 운영체제에 호환성이 좋다
 *  			| 컴파일 내용이 풀리다 : 해당 운영체제에서 컴파일을 다시 한다.
 *  
 *  자바로 제작이 가능
 *  -------------
 *  1. 웹 개발 : JSP
 *  2. 모바일 프로그램 ; 안드로이드
 *  3. 게임 : swing / javaFx
 *  		-> java3D
 * 특징
 * - 모든 운영체제에서 같은 소스로 사용이 가능
 * - 객체지향 프로그램
 * 		-> 조립식
 * 		프로그래머 / 개발자
 * 					새롭게 만듦
 * 		이미 만들어진 소스 -> 조립
 * - 메모리 자동 정리 : 스택 영역(메모리 처리)
 * 		| GC
 * - 라이브러리가 풍부
 * -------------------------------
 * 소스 코딩
 * 프로젝트명
 * |
 * - src
 * 		- .java -> 클래스명과 동일한 파일명
 * 		   class A -> A.java
 * 		  ** 한 파일 안에 여러 개의 클래스 제작이 가능
 * 		  class A
 * 		  class B
 * 		 -------------- A.java / B.java
 * 		 class A
 * 		 public class B
 * 		--------------- B.java
 * 
 * 		-> JRE -> 버전
 * 			
 * 		-> 규칙 (약속)
 * 		1. 클래스명 : 대문자 시작 MainClass / 두번째 단어 시작 대문자 시작 -> 헝거리안식 표현법 / _Main : 임시파일
 * 		2. 메소드명 : 소문자 시작 -> 기능처리
 * 		3. 변수명 : 소문자 시작 -> 필요한 데이터를 메모리 저장
 * 		4. 인터페이스 : 대문자 시작 -> 다른 클래스 연결(리모콘)
 *  	-------------가독성(수정이 편리)
 *  				 최적화(속도)
 *  				 메모리 관리
 *  	명령문이 종료하면 ;
 *  	필요시 주석 달기
*/

public class 자바정리 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
