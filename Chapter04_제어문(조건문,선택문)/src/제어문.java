/*
	제어문을 사용하는 이유
		프로그램 순차적 -> 위에서 아래로 이동하면서 실행
	-----------------------------------------
		순차문 : 문법
		조건문 : 필요시에만 문장을 수행
		반복문 : 같은 내용을 여러번 수행
	  -> 상황에 따라 다른 기능을 수행
	  -----------------------------------------
	  
	  조건에 따라 다르게 동작 : if, switch case
	  반복 작업 수행 : while, for
	  -----------
	  	-> 효율적인 코드 작성
		
	자바에서 지원하는 제어문
	조건문
		- **단일 조건문 : if문 -> 오류 방지 : 처리가 안되는 문장(예외처리)
		- **선택 조건문 : true / false일때 나눠서 작업 : if else문
		- 다중 조건문 : 조건에 맞는 문장만 수행 -> 1개의 조건만 수행 : 간결하게 표현
	선택문 : switch ~ case
	반복문 : while문 : 반복 횟수가 지정이 안됨 -> 네트워크 / 데이터베이스
		   do~while문 : 반드시 한 번 이상 수행 -> X
		   for문 : 반복 횟수가 지정된 경우 -> 화면 출력
	반복 제어문 
		- break : 반복문 탈출
		- continue : 반복문 상위로 이동

	제어문 
		-> 단일 조건문
		 	형식) if(조건문)
		 		{
		 			조건 -> true면 실행
		 		}
	
	1. 자바에서 사용하는 모든 제어문은 바로 밑에 있는 문장 한 개만 수행
		if(조건문)
			문장 1 -> 여기만 수행
			문장 2 -> if와 관계없는 문장 -> 무조건 수행하는 문장
		
		여러개 문장을 동시에 수행
			if(조건문)
			{
				문장 1
				문장 2
			}
			권장 사항 -> {} 블럭 사용
			
	1. 정수 입력 -> 홀 / 짝
	
*/
import java.util.Scanner;

public class 제어문 {

	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		System.out.print("정수 입력: ");
		
		int num = scan.nextInt();
		
		if(num % 2 == 0)
			System.out.println(num +"은 짝수 입니다.");
		
		else
			System.out.println(num +"은 홀수 입니다.");
	}

}
